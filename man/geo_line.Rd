% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo_line.R
\name{geo_line}
\alias{geo_line}
\alias{as_line}
\title{Create a line \code{geom}}
\usage{
geo_line(crds = NULL, window = NULL, features = 1, vertices = 2)

as_line(geom)
}
\arguments{
\item{crds}{\link[=data.frame]{data.frame(2)}\cr Coordinates to build the
\code{geom} from. It must include the column names \code{x} and \code{y}.}

\item{window}{\link[=data.frame]{data.frame(2)}\cr in case the reference window
deviates from the bounding box of \code{crds}, specify here the minimum and
maximum values in columns \code{x} and \code{y}.}

\item{features}{\link[=integer]{integerish(1)}\cr number of lines to create.}

\item{vertices}{\link[=integer]{integerish(.)}\cr number of vertices per line; will
be recycled if it does not have as many elements as specified in
\code{features}.}

\item{geom}{\link[=geom]{gridded(1)}\cr the geom to cast to type 'line'.}
}
\value{
A line geom.
}
\description{
Create a line geometry (of class \code{\link{geom}}) either by specifying
crds values or by sketching it.
}
\examples{
# 1. create a line programmatically
coords <- data.frame(x = c(40, 70, 70, 50),
                     y = c(40, 40, 60, 70))

# if no window is set, the bounding box will be set as window
(lineGeom <- geo_line(crds = coords))

# ... otherwise the vertices are plotted relative to the window

# the vertices are plottet relative to the window
window <- data.frame(x = c(0, 80),
                     y = c(0, 80))
lineGeom <- geo_line(crds = coords, window = window)

geo_vis(lineGeom, linecol = "green")

# 2. cast to point geom from another type
lineGeom <- as_line(geom = gtGeoms$point)

geo_vis(gtGeoms$point, linecol = "#FFB000", pointsymbol = 5)
geo_vis(lineGeom, linecol = "#33FF00", new = FALSE)

# 3. sketch a line
if(dev.interactive()){
  line <- geo_line(vertices = 4)
  geo_vis(line, linecol = "#B24223", linewidth = 5, new = FALSE)
}
}
\seealso{
Other geometry shapes: 
\code{\link{geo_point}()},
\code{\link{geo_polygon}()},
\code{\link{geo_random}()}
}
\concept{geometry shapes}
